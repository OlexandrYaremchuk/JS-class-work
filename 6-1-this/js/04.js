// const add = function (a, b) {
//     return a + b;
// };

//* Синтаксис стрілочної функції
//*     - з параметрами (якщо параметрів багато)
// c
// console.log(add(2, 4));
//*     - з одним параметром
const add = message => {
    console.log(message);
};
add('Hi dear friends');

//*     - без параметрів
const greet = () => {
    console.log('hi dear friends');
};
greet();
//*! Явне та неявне повернення
// Це приклад явного повернення. Тобто в тілі функції явно вказаний return та те що нам необхідно повернути
const add1 = (a, b) => {
    console.log('assd');
    return a + b;
};
console.log(add1(2, 4));

// Якщо в тілі функції немає конструкцій if різних циклів, то ми можемо зробити неявне поверненння. Тим самим значно скоротити кількість коду. По іншому, якщо у функції є фігурні дужки тобто тіло функції, то це явне поврнення, якщо ні то неявне повернення
const add2 = (a, b) => a + b;
console.log(add2(5, 10));

//*! Псевдомасив arguments
// Запамятайте. Стрілки не маю свого псевдомасива arguments
// const add3 = () => {
//     console.log(arguments);
// };
// add3(2, 3, 4, 5, 6, 7);
// Основні відміності між стрілками та звичайними функціями
//     - синтаксис
//     - вони швидше інтерпретуються, тобто читаються інтерпретатором
// -вони не мають створенного псевдомасива arguments

// Але якщо нам потрібно зібрати наші елементи в даному випадку набір чисел. Використовуємо ...rest
const add4 = (...args) => {
    console.log(args);
};
add4(2, 3, 4, 4, 5, 6, 6);
